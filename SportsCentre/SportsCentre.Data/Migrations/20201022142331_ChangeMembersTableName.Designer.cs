// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsCentre.Data;

namespace SportsCentre.Data.Migrations
{
    [DbContext(typeof(SportsCentreDbContext))]
    [Migration("20201022142331_ChangeMembersTableName")]
    partial class ChangeMembersTableName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportsCentre.Domain.Models.Centre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Centres");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<int?>("ClubId");

                    b.Property<string>("Country");

                    b.Property<string>("Founded");

                    b.Property<string>("Name");

                    b.Property<string>("Sport");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Birthdate");

                    b.Property<int?>("ClubId");

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.Property<string>("Position");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Court", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity");

                    b.Property<int?>("CentreId");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.ToTable("Courts");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date");

                    b.Property<int>("Duration");

                    b.Property<int>("FirstClubId");

                    b.Property<int>("SecondClubId");

                    b.Property<string>("Time");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Birthdate");

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Permit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MemberId");

                    b.Property<int?>("TrainingId");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TrainingId");

                    b.ToTable("Permits");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Birthdate");

                    b.Property<int?>("ClubId");

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.Property<string>("Position");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MatchId");

                    b.Property<int?>("MemberId");

                    b.Property<double>("Price");

                    b.Property<int>("SeatNumber");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("MemberId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("Duration");

                    b.Property<string>("Time");

                    b.HasKey("Id");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.TrainingPlayer", b =>
                {
                    b.Property<int>("TrainingId");

                    b.Property<int>("PlayerId");

                    b.HasKey("TrainingId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("TrainingPlayers");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Club", b =>
                {
                    b.HasOne("SportsCentre.Domain.Models.Club")
                        .WithMany("Clubs")
                        .HasForeignKey("ClubId");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Coach", b =>
                {
                    b.HasOne("SportsCentre.Domain.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Court", b =>
                {
                    b.HasOne("SportsCentre.Domain.Models.Centre", "Centre")
                        .WithMany("Courts")
                        .HasForeignKey("CentreId");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Permit", b =>
                {
                    b.HasOne("SportsCentre.Domain.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("SportsCentre.Domain.Models.Training", "Training")
                        .WithMany("Permits")
                        .HasForeignKey("TrainingId");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Player", b =>
                {
                    b.HasOne("SportsCentre.Domain.Models.Club", "Club")
                        .WithMany("Players")
                        .HasForeignKey("ClubId");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.Ticket", b =>
                {
                    b.HasOne("SportsCentre.Domain.Models.Match", "Match")
                        .WithMany("Tickets")
                        .HasForeignKey("MatchId");

                    b.HasOne("SportsCentre.Domain.Models.Member")
                        .WithMany("Tickets")
                        .HasForeignKey("MemberId");
                });

            modelBuilder.Entity("SportsCentre.Domain.Models.TrainingPlayer", b =>
                {
                    b.HasOne("SportsCentre.Domain.Models.Player", "Player")
                        .WithMany("TrainingPlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportsCentre.Domain.Models.Training", "Training")
                        .WithMany("TrainingPlayers")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
